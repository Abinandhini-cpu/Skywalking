# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

registryItems:
  applications:
    - {webflux-reactive-scenario: nq 0}
  instances:
    - {webflux-reactive-scenario: nq 0}
  operationNames:
    - webflux-reactive-scenario: ['GET:/testcase/route/bad', 'GET:/testcase/annotation/bad',
                                  'HEAD:/healthCheck', 'GET:/testcase/annotation/hello', 'GET:/testcase/notFound',
                                  'GET:/testcase', 'GET:/testcase/route/hello']
  heartbeat: []
segmentItems:
  - applicationCode: webflux-reactive-scenario
    segmentSize: nq 0
    segments:
      - segmentId: not null
        spans:
          - operationName: HEAD:/healthCheck
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 67
            componentName: ''
            isError: false
            spanType: Entry
            peer: ''
            peerId: 0
            tags:
              - {key: url, value: 'http://localhost:8080/healthCheck'}
              - {key: http.method, value: HEAD}
      - segmentId: not null
        spans:
          - operationName: GET:/testcase/annotation/hello
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 67
            componentName: ''
            isError: false
            spanType: Entry
            peer: ''
            peerId: 0
            tags:
              - {key: url, value: 'http://localhost:8080/testcase/annotation/hello'}
              - {key: http.method, value: GET}
      - segmentId: not null
        spans:
          - operationName: GET:/testcase/annotation/bad
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 67
            componentName: ''
            isError: true
            spanType: Entry
            peer: ''
            peerId: 0
            tags:
              - {key: url, value: 'http://localhost:8080/testcase/annotation/bad'}
              - {key: http.method, value: GET}
              - {key: status_code, value: '500'}
      - segmentId: not null
        spans:
          - operationName: GET:/testcase/route/hello
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 67
            componentName: ''
            isError: false
            spanType: Entry
            peer: ''
            peerId: 0
            tags:
              - {key: url, value: 'http://localhost:8080/testcase/route/hello'}
              - {key: http.method, value: GET}
              - {key: status_code, value: '200'}
      - segmentId: not null
        spans:
          - operationName: GET:/testcase/route/bad
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 67
            componentName: ''
            isError: true
            spanType: Entry
            peer: ''
            peerId: 0
            tags:
              - {key: url, value: 'http://localhost:8080/testcase/route/bad'}
              - {key: http.method, value: GET}
              - {key: status_code, value: '500'}
      - segmentId: not null
        spans:
          - operationName: GET:/testcase/notFound
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 67
            componentName: ''
            isError: true
            spanType: Entry
            peer: ''
            peerId: 0
            tags:
              - {key: url, value: 'http://localhost:8080/testcase/notFound'}
              - {key: http.method, value: GET}
              - {key: status_code, value: '404'}
      - segmentId: not null
        spans:
          - operationName: GET:/testcase
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: not null
            endTime: not null
            componentId: 67
            componentName: ''
            isError: false
            spanType: Entry
            peer: ''
            peerId: 0
            tags:
              - {key: url, value: 'http://localhost:8080/testcase'}
              - {key: http.method, value: GET}
